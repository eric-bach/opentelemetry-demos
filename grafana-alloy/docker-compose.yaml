# https://github.com/grafana/tempo/tree/main/example/docker-compose

services:
  ms-db-server:
    image: mcr.microsoft.com/mssql/server
    environment:
      - SA_PASSWORD=P@ssw0rd
      - ACCEPT_EULA=Y
    volumes:
      - ./data/db/mssql/scripts:/scripts/
    ports:
      - '1433:1433' # Ensure the port is correctly exposed
    #entrypoint: /bin/bash
    command:
      - /bin/bash
      - -c
      - |
        /opt/mssql/bin/sqlservr &
        pid=$$!

        echo "Waiting for MS SQL to be available ⏳"
        /opt/mssql-tools18/bin/sqlcmd -l 30 -S localhost -h-1 -V1 -U sa -P $$SA_PASSWORD -C -Q "SET NOCOUNT ON SELECT \"YAY WE ARE UP\" , @@servername"
        is_up=$$?
        while [ $$is_up -ne 0 ] ; do
          echo -e $$(date)
          /opt/mssql-tools18/bin/sqlcmd -l 30 -S localhost -h-1 -V1 -U sa -P $$SA_PASSWORD -C -Q "SET NOCOUNT ON SELECT \"YAY WE ARE UP\" , @@servername"
          is_up=$$?
          sleep 5
        done

        for foo in /scripts/*.sql
          do /opt/mssql-tools18/bin/sqlcmd -U sa -P $$SA_PASSWORD -C -l 30 -e -i $$foo
        done
        echo "All scripts have been executed. Waiting for MS SQL(pid $$pid) to terminate."

        wait $$pid

  grafana-alloy-app:
    build:
      context: ../test-app/
      dockerfile: Dockerfile
    container_name: grafana-alloy-app
    environment:
      - MS_DB_SERVER=ms-db-server
      - MS_DB_USER=sa
      - MS_DB_PASSWORD=P@ssw0rd
      - MS_DB_NAME=OtelTempo
    volumes:
      - ../test-app:/app
    ports:
      - '8080:8080'
    depends_on:
      - ms-db-server
      - alloy

  alloy:
    image: grafana/alloy:latest
    command: >
      run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
    volumes:
      - ./config/config.alloy:/etc/alloy/config.alloy
      - ./logs:/tmp/app-logs/
    ports:
      - 12345:12345
      - 4317:4317
      - 4318:4318
    depends_on:
      - tempo
      - loki

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./config/loki.yaml:/etc/loki/loki-config.yaml
    ports:
      - '3100:3100'

  # promtail:
  #   image: grafana/promtail:latest
  #   command: -config.file=/etc/promtail/config.yml
  #   volumes:
  #     #- ./config/promtail.yaml:/etc/promtail/config.yaml
  #     - /var/log:/var/log

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./config/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
      - GF_AUTH_BASIC_ENABLED=false
      - GF_FEATURE_TOGGLES_ENABLE=accessControlOnCall
      - GF_USERS_DEFAULT_THEME=light
    ports:
      - 3000:3000/tcp

  # Tempo runs as user 10001, and docker compose creates the volume as root.
  # As such, we need to chown the volume in order for Tempo to start correctly.
  init:
    image: &tempoImage grafana/tempo:latest
    user: root
    entrypoint:
      - 'chown'
      - '10001:10001'
      - '/var/tempo'
    volumes:
      - ./tempo-data:/var/tempo

  tempo:
    image: *tempoImage
    command: ['-config.file=/etc/tempo.yaml']
    volumes:
      - ./config/tempo.yaml:/etc/tempo.yaml
      - ./tempo-data:/var/tempo
    ports:
      - '3200' # tempo
      - '4317' # otlp grpc
    depends_on:
      - init
